{"version":3,"mappings":"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","names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","client","createRoot","hydrateRoot","PopStateEventType","createBrowserHistory","options","getLocation","createHref2","validateLocation","window","window2","document","defaultView","v5Compat","globalHistory","history","action","listener","index","getIndex","replaceState","__spreadProps","state","idx","handlePop","nextIndex","delta","location","push","to","createLocation","historyState","getHistoryState","url","createHref","pushState","error","DOMException","name","assign","replace2","createURL","isAbsolute","base","origin","href","invariant","createPath","replace","startsWith","URL","createBrowserURLImpl","listen","fn","Error","addEventListener","removeEventListener","encodeLocation","pathname","search","hash","go","getUrlBasedHistory","usr","value","message","warning","cond","__spreadValues","parsePath","Math","random","toString","substring","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","matchRoutes","routes","locationArg","basename","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","length","slice","every","i","compareIndexes","routesMeta","map","meta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","matchRoutesImpl","parentsMeta","parentPath","_hasParentOptionalSegments","flattenRoute","route","hasParentOptionalSegments","relativePath","caseSensitive","joinPaths","concat","children","computeScore","forEach","_a","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","join","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo2","splatValue","v","decodeURIComponent","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","JSON","stringify","getResolveToMatches","pathMatches","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","validMutationMethodsArr","Set","validRequestMethodsArr","DataRouterContext","React.createContext","displayName","DataRouterStateContext","createContext","ViewTransitionContext","isTransitioning","Map","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React2.useContext","useContext","useLocation","navigateEffectWarning","useIsomorphicLayoutEffect","cb","static","React2.useLayoutEffect","useLayoutEffect","useNavigate","router","hookName","ctx","invariant$1","getDataRouterConsoleError","useDataRouterContext","id","useCurrentRouteId","activeRef","React2.useRef","React2.useCallback","useCallback","_0","_1","__async","this","navigate","fromRouteId","useNavigateStable","dataRouterContext","navigator","routePathnamesJson","parse","relative","useNavigateUnstable","useResolvedPath","React2.useMemo","useMemo","useRoutesImpl","dataRouterState","unstable_onError","future","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","element","Component","lazy","renderedMatches","errors","initialized","errorIndex","findIndex","keys","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","errors2","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","errorElement","defaultErrorElement","matches2","getChildren","reactExports","createElement","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","component","_renderMatches","Provider","navigationType","DefaultErrorComponent","useDataRouterState","routeId","useRouteError","status","statusText","internal","isRouteErrorResponse","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","React2.createElement","React2.Fragment","style","Fragment","fontStyle","React2.createContext","React2.Component","constructor","super","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","staticContext","_deepestRenderedBoundaryId","useRouteContext","thisRoute","alreadyWarned","Route","Router","basenameProp","locationProp","staticProp","navigationContext","React3.useMemo","locationContext","trailingPathname","React3.createElement","Routes","createRoutesFromChildren","React3.Children","React3.isValidElement","treePath","React3.Fragment","apply","middleware","hasErrorBoundary","shouldRevalidate","handle","React3.memo","memo","defaultMethod","defaultEncType","isHtmlElement","object","tagName","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","has","getFormSubmissionInfo","target","method","formData","body","attr","getAttribute","FormData","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","prefix","append","invariant2","loadRouteModule","routeModulesCache","routeModule","__vitePreload","import","module","__reactRouterContext","isSpaMode","reload","Promise","isHtmlLinkDescriptor","rel","imageSrcSet","imageSizes","getKeyedPrefetchLinks","manifest","routeModules","descriptors","preloads","set","preloadsSet","deduped","descriptor","page","as","obj","sorted","sortKeys","add","link","dedupeLinkDescriptors","all","mod","links","flat","getNewMatchesForLinks","nextMatches","currentMatches","mode","isNew","matchPathChanged","manifestRoute","hasLoader","routeChoice","currentUrl","currentParams","nextUrl","nextParams","defaultShouldRevalidate","getModuleLinkHrefs","includeHydrateFallback","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","useDataRouterContext2","context","React8.useContext","getOwnPropertyNames","FrameworkContext","React8.createContext","useFrameworkContext","composeEventHandlers","theirHandler","ourHandler","event","defaultPrevented","PrefetchPageLinks","_b","linkProps","__objRest","React8.useMemo","React8.createElement","PrefetchPageLinksImpl","_c","_d","useDataRouterStateContext","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","m2","hasClientLoader","size","reqUrl","extension","singleFetchUrl","searchParams","moduleHrefs","keyedPrefetchLinks","setKeyedPrefetchLinks","React8.useState","useState","React8.useEffect","interrupted","then","useKeyedPrefetchLinks","React8.Fragment","nonce","mergeRefs","refs","isBrowser","__reactRouterVersion","BrowserRouter","historyRef","React10.useRef","setStateImpl","React10.useState","setState","React10.useCallback","newState","React10.startTransition","ABSOLUTE_URL_REGEX2","Link","React10.forwardRef","forwardRef","_e","forwardedRef","_f","onClick","discover","prefetch","reloadDocument","preventScrollReset","viewTransition","absoluteHref","React10.useContext","isExternal","targetUrl","protocol","joinedPathname","useHref","shouldPrefetch","prefetchRef","prefetchHandlers","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","React8.useRef","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","disconnect","setTimeout","clearTimeout","setIntent","cancelIntent","usePrefetchBehavior","internalOnClick","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","React10.createElement","React10.Fragment","useDataRouterContext3","getDataRouterConsoleError2","_g","_h","ariaCurrentProp","className","classNameProp","styleProp","routerState","vtContext","currentPath","currentLocation","nextPath","nextLocation","useViewTransitionState","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Boolean","_i","_j","fetcherKey","onSubmit","submit","currentRouteId","getUniqueFetcherId","fetch","formMethod","formEncType","flushSync","useSubmit","formAction","URLSearchParams","indexValues","getAll","delete","qs","useFormAction","submitter","nativeEvent","submitMethod","currentTarget","fetcherId","String","DarkSideOfTheMoon","backgroundImage","src","alt","placeholder","rows","Date","getFullYear","RegencyViewEstateV2","currentSection","setCurrentSection","useEffect","handleScroll","sections","querySelectorAll","scrollPosition","scrollY","innerHeight","section","sectionTop","offsetTop","sectionHeight","offsetHeight","Home","Bath","Maximize","Calendar","Phone","Mail","MapPin","jsxRuntimeExports","RegencyViewEstate","htmlFor","LayoutGroupContext","PresenceContext","addUniqueItem","arr","item","removeItem","splice","clamp","max","MotionGlobalConfig","isNumericalString","isObject","isZeroValueString","callback","noop","any","combineFunctions","pipe","transformers","progress","toFromDifference","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","clear","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","easeIn","easeOut","easeInOut","isBezierDefinition","Array","isArray","easingLookup","linear","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","timestamp","isProcessing","flagRunNextFrame","steps","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","step","schedule","keepAlive","immediate","queue","cancel","process","frameData","frameloop","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","postRender","processBatch","useManualTiming","performance","now","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","time","newTime","queueMicrotask","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","number","parseFloat","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","parseInt","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","values","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","hueToRgb","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","keyframes","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","ease","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","updateFinished","finished","_finished","resolve","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","iterationDuration","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_k","_l","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","makeAnimationInstant","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_m","_n","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","HTMLElement","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","isNone","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","getValueAsType","MotionValue","init","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","microtask","cancelMicrotask","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tabIndex","isElementKeyboardAccessible","hasAttribute","isSVGElement","isMotionValue","valueTypes","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","LazyContext","strict","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","scaleCorrectors","isForcedMotionValue","layoutId","translateAlias","numTransforms","buildHTMLStyles","latestValues","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","visualState","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","dashKeys","array","camelKeys","buildSVGAttrs","_o","isSVGTag","_p","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","transformBox","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","getValueState","resolveVariantFromProps","custom","resolveMotionValue","makeLatestValues","presenceContext","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","renderState","makeState","useRef","useConstant","prevProps","newValues","liveStyle","useHTMLVisualState","scrapeMotionValuesFromProps$1","toUpperCase","useSVGVisualState","motionComponentSymbol","isRefObject","useMotionRef","externalRef","instance","onMount","mount","unmount","camelToDash","str","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","scheduleRenderMicrotask","animationState","animateChanges","MotionHandoffMarkAsComplete","enteringChildren","allowProjection","createMotionComponent","preloadedFeatures","features","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","ForwardRefMotionComponent","layoutGroupId","createMotionProxy","Proxy","componentCache","factory","_target","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addChild","remove","removeChild","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","prevPresenceContext","nextValue","prevValue","addValue","hasValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getDefaultTransition","getTransformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","DOMVisualElement","arguments","compareDocumentPosition","childSubscription","textContent","renderHTML","elementStyle","applyProjectionStyles","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","_styleProp","setAttribute","renderSVG","createDomVisualElement","resolveVariant","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","_q","_r","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","setTarget","calcChildStagger","numChildren","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","addDomEvent","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","isPanStarted","isDistancePastThreshold","xDelta","yDelta","__pow","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","_s","_t","lookupRoot","rootObservers","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","isFocusVisible","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","motion","div","RegencyViewEstateV5","handleSmoothScroll","targetId","targetElement","getElementById","scrollIntoView","behavior","block","anchor","App","V1","V2","V3","V4","V5","ReactDOM","React","StrictMode"],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/react-router/dist/development/chunk-OIYGIGL5.mjs","../../src/versions/v1/Home.jsx","../../src/versions/v2/Home.jsx","../../src/versions/v3/Home.jsx","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-object.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/stats/buffer.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../../src/versions/v4/Home.jsx","../../src/versions/v5/Home.jsx","../../App.jsx","../../main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * react-router v7.9.4\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref2(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref2,\n    createURL(to) {\n      return new URL(createHref2(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    return createBrowserURLImpl(to);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref2(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nfunction createBrowserURLImpl(to, isAbsolute = false) {\n  let base = \"http://localhost\";\n  if (typeof window !== \"undefined\") {\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n  }\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  if (!isAbsolute && href.startsWith(\"//\")) {\n    href = base + href;\n  }\n  return new URL(href, base);\n}\n\n// lib/router/utils.ts\nfunction createContext(defaultValue) {\n  return { defaultValue };\n}\nvar _map;\nvar RouterContextProvider = class {\n  /**\n   * Create a new `RouterContextProvider` instance\n   * @param init An optional initial context map to populate the provider with\n   */\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  /**\n   * Access a value from the context. If no value has been set for the context,\n   * it will return the context's `defaultValue` if provided, or throw an error\n   * if no `defaultValue` was set.\n   * @param context The context to get the value for\n   * @returns The value for the context, or the context's `defaultValue` if no\n   * value was set\n   */\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  /**\n   * Set a value for the context. If the context already has a value set, this\n   * will overwrite it.\n   *\n   * @param context The context to set the value for\n   * @param value The value to set for the context\n   * @returns {void}\n   */\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}, allowInPlaceMutations = false) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      allowInPlaceMutations || !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest,\n          allowInPlaceMutations\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    loaderData: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\", _hasParentOptionalSegments = false) {\n  let flattenRoute = (route, index, hasParentOptionalSegments = _hasParentOptionalSegments, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      if (!meta.relativePath.startsWith(parentPath) && hasParentOptionalSegments) {\n        return;\n      }\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(\n        route.children,\n        branches,\n        routesMeta,\n        path,\n        hasParentOptionalSegments\n      );\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, true, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify2 = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify2(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return encodeURIComponent(stringify2(param));\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  ).replace(/\\/([\\w-]+)\\?(\\/|$)/g, \"(/$1)?$2\");\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction prependBasename({\n  basename,\n  pathname\n}) {\n  return pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  if (!basename.startsWith(\"/\")) {\n    basename = `/${basename}`;\n  }\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions2 = null;\n  let getScrollRestorationKey2 = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  let initialized;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialized = true;\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  } else {\n    if (initialMatches && !init.hydrationData) {\n      let fogOfWar = checkFogOfWar(\n        initialMatches,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active) {\n        initialMatches = null;\n      }\n    }\n    if (!initialMatches) {\n      initialized = false;\n      initialMatches = [];\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    } else if (initialMatches.some((m) => m.route.lazy)) {\n      initialized = false;\n    } else if (!initialMatches.some((m) => routeHasLoaderOrMiddleware(m.route))) {\n      initialized = true;\n    } else {\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\n      if (errors) {\n        let idx = initialMatches.findIndex(\n          (m) => errors[m.route.id] !== void 0\n        );\n        initialized = initialMatches.slice(0, idx + 1).every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      } else {\n        initialized = initialMatches.every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      }\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser2) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    if (newState.matches) {\n      newState.matches = newState.matches.map((m) => {\n        let route = manifest[m.route.id];\n        let matchRoute = m.route;\n        if (matchRoute.element !== route.element || matchRoute.errorElement !== route.errorElement || matchRoute.hydrateFallbackElement !== route.hydrateFallbackElement) {\n          return {\n            ...m,\n            route\n          };\n        }\n        return m;\n      });\n    }\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let restoreScrollPosition = isUninterruptedRevalidation ? false : getSavedScrollPosition(location, newState.matches || state.matches);\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition,\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = init.getContext ? await init.getContext() : new RouterContextProvider();\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        if (discoverResult.partialMatches.length === 0) {\n          let { matches: matches2, route } = getShortCircuitMatches(dataRoutes);\n          return {\n            matches: matches2,\n            pendingActionResult: [\n              route.id,\n              {\n                type: \"error\" /* error */,\n                error: discoverResult.error\n              }\n            ]\n          };\n        }\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties2,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [\n          boundaryMatch.route.id,\n          result,\n          actionMatch.route.id\n        ]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        if (discoverResult.partialMatches.length === 0) {\n          let { matches: matches2, route } = getShortCircuitMatches(dataRoutes);\n          return {\n            matches: matches2,\n            loaderData: {},\n            errors: {\n              [route.id]: discoverResult.error\n            }\n          };\n        }\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties2,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && !dsMatches.some(\n      (m) => m.route.middleware && m.route.middleware.length > 0\n    ) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let scopedContext = init.getContext ? await init.getContext() : new RouterContextProvider();\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(requestMatches, path);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties2,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let match = getTargetMatch(matches, path);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser2) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (isAbsoluteUrl(location)) {\n        const url = createBrowserURLImpl(location, true);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    if (request.signal.aborted) {\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function resetFetcher(key, opts) {\n    abortFetcher(key, opts?.reason);\n    updateFetcherState(key, getDoneFetcher(null));\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key, reason) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort(reason);\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions2 = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey2 = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions2 = null;\n      getScrollPosition = null;\n      getScrollRestorationKey2 = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey2) {\n      let key = getScrollRestorationKey2(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions2 && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions2[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions2) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions2[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2,\n              false\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children, unstable_allowElementMutations = false) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2,\n      unstable_allowElementMutations\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    resetFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n    _internalSetStateDoNotUseOrYouWillBreakYourApp(newState) {\n      updateState(newState);\n    }\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return generateMiddlewareResponse ? generateMiddlewareResponse(() => Promise.resolve(staticContext)) : staticContext;\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof RouterContextProvider,\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `RouterContextProvider`\"\n      );\n      try {\n        await loadLazyMiddlewareForMatches(\n          matches,\n          manifest,\n          mapRouteProperties2\n        );\n        let renderedStaticContext;\n        let response = await runServerMiddlewarePipeline(\n          {\n            request,\n            matches,\n            params: matches[0].params,\n            // If we're calling middleware then it must be enabled so we can cast\n            // this to the proper type knowing it's not an `AppLoadContext`\n            context: requestContext\n          },\n          async () => {\n            let res = await generateMiddlewareResponse(\n              async (revalidationRequest, opts2 = {}) => {\n                let result2 = await queryImpl(\n                  revalidationRequest,\n                  location,\n                  matches,\n                  requestContext,\n                  dataStrategy || null,\n                  skipLoaderErrorBubbling === true,\n                  null,\n                  \"filterMatchesToLoad\" in opts2 ? opts2.filterMatchesToLoad ?? null : filterMatchesToLoad ?? null,\n                  skipRevalidation === true\n                );\n                if (isResponse(result2)) {\n                  return result2;\n                }\n                renderedStaticContext = { location, basename, ...result2 };\n                return renderedStaticContext;\n              }\n            );\n            return res;\n          },\n          async (error, routeId) => {\n            if (isRedirectResponse(error)) {\n              return error;\n            }\n            if (isResponse(error)) {\n              try {\n                error = new ErrorResponseImpl(\n                  error.status,\n                  error.statusText,\n                  await parseResponseBody(error)\n                );\n              } catch (e) {\n                error = e;\n              }\n            }\n            if (isDataWithResponseInit(error)) {\n              error = dataWithResponseInitToErrorResponse(error);\n            }\n            if (renderedStaticContext) {\n              if (routeId in renderedStaticContext.loaderData) {\n                renderedStaticContext.loaderData[routeId] = void 0;\n              }\n              let staticContext = getStaticContextFromError(\n                dataRoutes,\n                renderedStaticContext,\n                error,\n                skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id\n              );\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            } else {\n              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(\n                matches,\n                matches.find(\n                  (m) => m.route.id === routeId || m.route.loader\n                )?.route.id || routeId\n              ).route.id;\n              let staticContext = {\n                matches,\n                location,\n                basename,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                  [boundaryRouteId]: error\n                },\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\n                actionHeaders: {},\n                loaderHeaders: {}\n              };\n              return generateMiddlewareResponse(\n                () => Promise.resolve(staticContext)\n              );\n            }\n          }\n        );\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null,\n      filterMatchesToLoad || null,\n      skipRevalidation === true\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    generateMiddlewareResponse\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    if (generateMiddlewareResponse) {\n      invariant(\n        requestContext instanceof RouterContextProvider,\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `RouterContextProvider`\"\n      );\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);\n      let response = await runServerMiddlewarePipeline(\n        {\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        },\n        async () => {\n          let res = await generateMiddlewareResponse(\n            async (innerRequest) => {\n              let result2 = await queryImpl(\n                innerRequest,\n                location,\n                matches,\n                requestContext,\n                dataStrategy || null,\n                false,\n                match,\n                null,\n                false\n              );\n              let processed = handleQueryResult(result2);\n              return isResponse(processed) ? processed : typeof processed === \"string\" ? new Response(processed) : Response.json(processed);\n            }\n          );\n          return res;\n        },\n        (error) => {\n          if (isDataWithResponseInit(error)) {\n            return Promise.resolve(dataWithResponseInitToResponse(error));\n          }\n          if (isResponse(error)) {\n            return Promise.resolve(error);\n          }\n          throw error;\n        }\n      );\n      return response;\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match,\n      null,\n      false\n    );\n    return handleQueryResult(result);\n    function handleQueryResult(result2) {\n      if (isResponse(result2)) {\n        return result2;\n      }\n      let error = result2.errors ? Object.values(result2.errors)[0] : void 0;\n      if (error !== void 0) {\n        throw error;\n      }\n      if (result2.actionData) {\n        return Object.values(result2.actionData)[0];\n      }\n      if (result2.loaderData) {\n        return Object.values(result2.loaderData)[0];\n      }\n      return void 0;\n    }\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null,\n          filterMatchesToLoad,\n          skipRevalidation\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch,\n        filterMatchesToLoad\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        [],\n        requestContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        filterMatchesToLoad,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null,\n      filterMatchesToLoad\n    );\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        routeMatch,\n        [],\n        requestContext\n      );\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\n        // Up to but not including the boundary\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\n      ) : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(\n            mapRouteProperties2,\n            manifest,\n            request,\n            match,\n            [],\n            requestContext,\n            false\n          );\n        }\n        return getDataStrategyMatch(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          [],\n          requestContext,\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\n        );\n      });\n    }\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      request,\n      dsMatches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      request,\n      matches,\n      null,\n      requestContext,\n      true\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isRouteRequest) {\n          if (isResponse(result.result)) {\n            throw result;\n          } else if (isDataWithResponseInit(result.result)) {\n            throw dataWithResponseInitToResponse(result.result);\n          }\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = prependBasename({ basename, pathname: path.pathname });\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (!routeHasLoaderOrMiddleware(route)) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties2,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let isMidInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0;\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {\n        return;\n      }\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (isMidInitialLoad) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction routeHasLoaderOrMiddleware(route) {\n  return route.loader != null || route.middleware != null && route.middleware.length > 0;\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!routeHasLoaderOrMiddleware(route)) {\n    return false;\n  }\n  let hasData = loaderData != null && route.id in loaderData;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2, allowElementMutations) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = [];\n  let existingChildren = [];\n  children.forEach((newRoute) => {\n    let existingRoute = childrenToPatch.find(\n      (existingRoute2) => isSameRoute(newRoute, existingRoute2)\n    );\n    if (existingRoute) {\n      existingChildren.push({ existingRoute, newRoute });\n    } else {\n      uniqueChildren.push(newRoute);\n    }\n  });\n  if (uniqueChildren.length > 0) {\n    let newRoutes = convertRoutesToDataRoutes(\n      uniqueChildren,\n      mapRouteProperties2,\n      [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n      manifest\n    );\n    childrenToPatch.push(...newRoutes);\n  }\n  if (allowElementMutations && existingChildren.length > 0) {\n    for (let i = 0; i < existingChildren.length; i++) {\n      let { existingRoute, newRoute } = existingChildren[i];\n      let existingRouteTyped = existingRoute;\n      let [newRouteTyped] = convertRoutesToDataRoutes(\n        [newRoute],\n        mapRouteProperties2,\n        [],\n        // Doesn't matter for mutated routes since they already have an id\n        {},\n        // Don't touch the manifest here since we're updating in place\n        true\n      );\n      Object.assign(existingRouteTyped, {\n        element: newRouteTyped.element ? newRouteTyped.element : existingRouteTyped.element,\n        errorElement: newRouteTyped.errorElement ? newRouteTyped.errorElement : existingRouteTyped.errorElement,\n        hydrateFallbackElement: newRouteTyped.hydrateFallbackElement ? newRouteTyped.hydrateFallbackElement : existingRouteTyped.hydrateFallbackElement\n      });\n    }\n  }\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  lazyRoutePromise?.catch(() => {\n  });\n  lazyHandlerPromise?.catch(() => {\n  });\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {\n  let promises = matches.map(({ route }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"middleware\",\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runClientMiddlewarePipeline(args, () => defaultDataStrategy(args));\n}\nfunction runServerMiddlewarePipeline(args, handler, errorHandler) {\n  return runMiddlewarePipeline(\n    args,\n    handler,\n    processResult,\n    isResponse,\n    errorHandler\n  );\n  function processResult(result) {\n    return isDataWithResponseInit(result) ? dataWithResponseInitToResponse(result) : result;\n  }\n}\nfunction runClientMiddlewarePipeline(args, handler) {\n  return runMiddlewarePipeline(\n    args,\n    handler,\n    (r) => r,\n    // No post-processing needed on the client\n    isDataStrategyResults,\n    errorHandler\n  );\n  function errorHandler(error, routeId, nextResult) {\n    if (nextResult) {\n      return Promise.resolve(\n        Object.assign(nextResult.value, {\n          [routeId]: { type: \"error\", result: error }\n        })\n      );\n    } else {\n      let { matches } = args;\n      let maxBoundaryIdx = Math.min(\n        // Throwing route\n        Math.max(\n          matches.findIndex((m) => m.route.id === routeId),\n          0\n        ),\n        // or the shallowest route that needs to load data\n        Math.max(\n          matches.findIndex((m) => m.unstable_shouldCallHandler()),\n          0\n        )\n      );\n      let boundaryRouteId = findNearestBoundary(\n        matches,\n        matches[maxBoundaryIdx].route.id\n      ).route.id;\n      return Promise.resolve({\n        [boundaryRouteId]: { type: \"error\", result: error }\n      });\n    }\n  }\n}\nasync function runMiddlewarePipeline(args, handler, processResult, isResult, errorHandler) {\n  let { matches, request, params, context } = args;\n  let tuples = matches.flatMap(\n    (m) => m.route.middleware ? m.route.middleware.map((fn) => [m.route.id, fn]) : []\n  );\n  let result = await callRouteMiddleware(\n    { request, params, context },\n    tuples,\n    handler,\n    processResult,\n    isResult,\n    errorHandler\n  );\n  return result;\n}\nasync function callRouteMiddleware(args, middlewares, handler, processResult, isResult, errorHandler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    throw request.signal.reason ?? new Error(`Request aborted: ${request.method} ${request.url}`);\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    let result = await handler();\n    return result;\n  }\n  let [routeId, middleware] = tuple;\n  let nextResult;\n  let next = async () => {\n    if (nextResult) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    try {\n      let result = await callRouteMiddleware(\n        args,\n        middlewares,\n        handler,\n        processResult,\n        isResult,\n        errorHandler,\n        idx + 1\n      );\n      nextResult = { value: result };\n      return nextResult.value;\n    } catch (error) {\n      nextResult = { value: await errorHandler(error, routeId, nextResult) };\n      return nextResult.value;\n    }\n  };\n  try {\n    let value = await middleware(args, next);\n    let result = value != null ? processResult(value) : void 0;\n    if (isResult(result)) {\n      return result;\n    } else if (nextResult) {\n      return result ?? nextResult.value;\n    } else {\n      nextResult = { value: await next() };\n      return nextResult.value;\n    }\n  } catch (error) {\n    let response = await errorHandler(error, routeId, nextResult);\n    return response;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties2,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties2,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      let { lazy, loader, middleware } = match.route;\n      let callHandler = isUsingNewApi || shouldLoad || handlerOverride && !isMutationMethod(request.method) && (lazy || loader);\n      let isMiddlewareOnlyRoute = middleware && middleware.length > 0 && !loader && !lazy;\n      if (callHandler && !isMiddlewareOnlyRoute) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runClientMiddlewarePipeline(typedDataStrategyArgs, () => {\n      return cb({\n        ...typedDataStrategyArgs,\n        fetcherKey,\n        runClientMiddleware: () => {\n          throw new Error(\n            \"Cannot call `runClientMiddleware()` from within an `runClientMiddleware` handler\"\n          );\n        }\n      });\n    });\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [\n        m._lazyPromises?.handler,\n        m._lazyPromises?.route\n      ])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function parseResponseBody(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n    return response.body == null ? null : response.json();\n  }\n  return response.text();\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      data2 = await parseResponseBody(result);\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!isAbsoluteUrl(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (isAbsoluteUrl(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    if (pendingActionResult[2]) {\n      loaderData[pendingActionResult[2]] = void 0;\n    }\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    if (controller && controller.signal.aborted) {\n      return;\n    }\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction dataWithResponseInitToResponse(data2) {\n  return Response.json(data2.data, data2.init ?? void 0);\n}\nfunction dataWithResponseInitToErrorResponse(data2) {\n  return new ErrorResponseImpl(\n    data2.init?.status ?? 500,\n    data2.init?.statusText ?? \"Internal Server Error\",\n    data2.data\n  );\n}\nfunction isDataStrategyResults(result) {\n  return result != null && typeof result === \"object\" && Object.entries(result).every(\n    ([key, value]) => typeof key === \"string\" && isDataStrategyResult(value)\n  );\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/context.ts\nimport * as React from \"react\";\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar RSCRouterContext = React.createContext(false);\nfunction useIsRSCRouterContext() {\n  return React.useContext(RSCRouterContext);\n}\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar AwaitContextProvider = (props) => React.createElement(AwaitContext.Provider, props);\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\nvar ENABLE_DEV_WARNINGS = true;\n\n// lib/hooks.tsx\nimport * as React2 from \"react\";\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React2.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React2.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React2.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React2.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React2.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React2.createContext(null);\nfunction useOutletContext() {\n  return React2.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React2.useContext(RouteContext).outlet;\n  return React2.useMemo(\n    () => outlet && /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet),\n    [outlet, context]\n  );\n}\nfunction useParams() {\n  let { matches } = React2.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React2.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, unstable_onError, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes.\n          // Pre-encode `?` and `#` ahead of `encodeLocation` because it uses\n          // `new URL()` internally and we need to prevent it from treating\n          // them as separators\n          navigator.encodeLocation ? navigator.encodeLocation(\n            match.pathname.replace(/\\?/g, \"%3F\").replace(/#/g, \"%23\")\n          ).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          // Pre-encode `?` and `#` ahead of `encodeLocation` because it uses\n          // `new URL()` internally and we need to prevent it from treating\n          // them as separators\n          navigator.encodeLocation ? navigator.encodeLocation(\n            match.pathnameBase.replace(/\\?/g, \"%3F\").replace(/#/g, \"%23\")\n          ).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    unstable_onError,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    if (this.props.unstable_onError) {\n      this.props.unstable_onError(error, errorInfo);\n    } else {\n      console.error(\n        \"React Router caught the following error during render\",\n        error\n      );\n    }\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, unstable_onError = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight(\n    (outlet, match, index) => {\n      let error;\n      let shouldRenderHydrateFallback = false;\n      let errorElement = null;\n      let hydrateFallbackElement = null;\n      if (dataRouterState) {\n        error = errors && match.route.id ? errors[match.route.id] : void 0;\n        errorElement = match.route.errorElement || defaultErrorElement;\n        if (renderFallback) {\n          if (fallbackIndex < 0 && index === 0) {\n            warningOnce(\n              \"route-fallback\",\n              false,\n              \"No `HydrateFallback` element provided to render during initial hydration\"\n            );\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = null;\n          } else if (fallbackIndex === index) {\n            shouldRenderHydrateFallback = true;\n            hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n          }\n        }\n      }\n      let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n      let getChildren = () => {\n        let children;\n        if (error) {\n          children = errorElement;\n        } else if (shouldRenderHydrateFallback) {\n          children = hydrateFallbackElement;\n        } else if (match.route.Component) {\n          children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n        } else if (match.route.element) {\n          children = match.route.element;\n        } else {\n          children = outlet;\n        }\n        return /* @__PURE__ */ React2.createElement(\n          RenderedRoute,\n          {\n            match,\n            routeContext: {\n              outlet,\n              matches: matches2,\n              isDataRoute: dataRouterState != null\n            },\n            children\n          }\n        );\n      };\n      return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n        RenderErrorBoundary,\n        {\n          location: dataRouterState.location,\n          revalidation: dataRouterState.revalidation,\n          component: errorElement,\n          error,\n          children: getChildren(),\n          routeContext: { outlet: null, matches: matches2, isDataRoute: true },\n          unstable_onError\n        }\n      ) : getChildren();\n    },\n    null\n  );\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React2.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  let revalidate = React2.useCallback(async () => {\n    await dataRouterContext.router.revalidate();\n  }, [dataRouterContext.router]);\n  return React2.useMemo(\n    () => ({ revalidate, state: state.revalidation }),\n    [revalidate, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React2.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nfunction useAsyncValue() {\n  let value = React2.useContext(AwaitContext);\n  return value?._data;\n}\nfunction useAsyncError() {\n  let value = React2.useContext(AwaitContext);\n  return value?._error;\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\n  let blockerFunction = React2.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React2.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React2.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\nfunction useRoute(...args) {\n  const currentRouteId = useCurrentRouteId(\n    \"useRoute\" /* UseRoute */\n  );\n  const id = args[0] ?? currentRouteId;\n  const state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  const route = state.matches.find(({ route: route2 }) => route2.id === id);\n  if (route === void 0) return void 0;\n  return {\n    loaderData: state.loaderData[id],\n    actionData: state.actionData?.[id]\n  };\n}\n\n// lib/components.tsx\nimport * as React3 from \"react\";\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\n  \"HydrateFallback\",\n  \"hydrateFallbackElement\"\n];\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    getContext: opts?.getContext,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n  }).initialize();\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction shallowDiff(a, b) {\n  if (a === b) {\n    return false;\n  }\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return true;\n  }\n  for (let key of aKeys) {\n    if (a[key] !== b[key]) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction UNSTABLE_TransitionEnabledRouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl,\n  unstable_onError\n}) {\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let [revalidating, startRevalidation] = React3.useTransition();\n  let [state, setState] = React3.useState(router.state);\n  router.__setPendingRerender = (promise) => startRevalidation(\n    // @ts-expect-error - need react 19 types for this to be async\n    async () => {\n      const rerender = await promise;\n      startRevalidation(() => {\n        rerender();\n      });\n    }\n  );\n  let navigator = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n      unstable_onError\n    }),\n    [router, navigator, basename, unstable_onError]\n  );\n  React3.useLayoutEffect(() => {\n    return router.subscribe(\n      (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n        newState.fetchers.forEach((fetcher, key) => {\n          if (fetcher.data !== void 0) {\n            fetcherData.current.set(key, fetcher.data);\n          }\n        });\n        deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n        const diff = shallowDiff(state, newState);\n        if (!diff) return;\n        if (flushSync) {\n          if (reactDomFlushSyncImpl) {\n            reactDomFlushSyncImpl(() => setState(newState));\n          } else {\n            setState(newState);\n          }\n        } else {\n          React3.startTransition(() => {\n            setState(newState);\n          });\n        }\n      }\n    );\n  }, [router, reactDomFlushSyncImpl, state]);\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(\n    DataRouterStateContext.Provider,\n    {\n      value: {\n        ...state,\n        revalidation: revalidating ? \"loading\" : state.revalidation\n      }\n    },\n    /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(\n      Router,\n      {\n        basename,\n        location: state.location,\n        navigationType: state.historyAction,\n        navigator\n      },\n      /* @__PURE__ */ React3.createElement(\n        MemoizedDataRoutes,\n        {\n          routes: router.routes,\n          future: router.future,\n          state,\n          unstable_onError\n        }\n      )\n    ))\n  )), null);\n}\nfunction RouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl,\n  unstable_onError\n}) {\n  let [state, setStateImpl] = React3.useState(router.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let logErrorsAndSetState = React3.useCallback(\n    (newState) => {\n      setStateImpl((prevState) => {\n        if (newState.errors && unstable_onError) {\n          Object.entries(newState.errors).forEach(([routeId, error]) => {\n            if (prevState.errors?.[routeId] !== error) {\n              unstable_onError(error);\n            }\n          });\n        }\n        return newState;\n      });\n    },\n    [unstable_onError]\n  );\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync) {\n          reactDomFlushSyncImpl(() => logErrorsAndSetState(newState));\n        } else {\n          React3.startTransition(() => logErrorsAndSetState(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => logErrorsAndSetState(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [\n      router.window,\n      reactDomFlushSyncImpl,\n      transition,\n      renderDfd,\n      logErrorsAndSetState\n    ]\n  );\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router.window.document.startViewTransition(async () => {\n        React3.startTransition(() => logErrorsAndSetState(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router.window, logErrorsAndSetState]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n      unstable_onError\n    }),\n    [router, navigator, basename, unstable_onError]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router.routes,\n        future: router.future,\n        state,\n        unstable_onError\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n  unstable_onError\n}) {\n  return useRoutesImpl(routes, void 0, state, unstable_onError, future);\n}\nfunction MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}) {\n  let historyRef = React3.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React3.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React3.useCallback(\n    (newState) => {\n      React3.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction Navigate({\n  to,\n  replace: replace2,\n  state,\n  relative\n}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n  let { static: isStatic } = React3.useContext(NavigationContext);\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\n  );\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n  React3.useEffect(() => {\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\n  }, [navigate, jsonPath, relative, replace2, state]);\n  return null;\n}\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\nfunction Route(props) {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\nfunction Routes({\n  children,\n  location\n}) {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\nfunction Await({\n  children,\n  errorElement,\n  resolve\n}) {\n  let dataRouterContext = React3.useContext(DataRouterContext);\n  return /* @__PURE__ */ React3.createElement(\n    AwaitErrorBoundary,\n    {\n      resolve,\n      errorElement,\n      unstable_onError: dataRouterContext?.unstable_onError\n    },\n    /* @__PURE__ */ React3.createElement(ResolveAwait, null, children)\n  );\n}\nvar AwaitErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, errorInfo) {\n    if (this.props.unstable_onError) {\n      this.props.unstable_onError(error, errorInfo);\n    } else {\n      console.error(\n        \"<Await> caught the following error during render\",\n        error,\n        errorInfo\n      );\n    }\n  }\n  render() {\n    let { children, errorElement, resolve } = this.props;\n    let promise = null;\n    let status = 0 /* pending */;\n    if (!(resolve instanceof Promise)) {\n      status = 1 /* success */;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      status = 2 /* error */;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {\n      });\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if (resolve._tracked) {\n      promise = resolve;\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\n    } else {\n      status = 0 /* pending */;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\n        (error) => {\n          this.props.unstable_onError?.(error);\n          Object.defineProperty(resolve, \"_error\", { get: () => error });\n        }\n      );\n    }\n    if (status === 2 /* error */ && !errorElement) {\n      throw promise._error;\n    }\n    if (status === 2 /* error */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\n    }\n    if (status === 1 /* success */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\n    }\n    throw promise;\n  }\n};\nfunction ResolveAwait({\n  children\n}) {\n  let data2 = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data2) : children;\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\n}\nfunction createRoutesFromChildren(children, parentPath = []) {\n  let routes = [];\n  React3.Children.forEach(children, (element, index) => {\n    if (!React3.isValidElement(element)) {\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React3.Fragment) {\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n    invariant(\n      element.type === Route,\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      middleware: element.props.middleware,\n      loader: element.props.loader,\n      action: element.props.action,\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\n      HydrateFallback: element.props.HydrateFallback,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n    routes.push(route);\n  });\n  return routes;\n}\nvar createRoutesFromElements = createRoutesFromChildren;\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction useRouteComponentProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData(),\n    matches: useMatches()\n  };\n}\nfunction WithComponentProps({\n  children\n}) {\n  const props = useRouteComponentProps();\n  return React3.cloneElement(children, props);\n}\nfunction withComponentProps(Component4) {\n  return function WithComponentProps2() {\n    const props = useRouteComponentProps();\n    return React3.createElement(Component4, props);\n  };\n}\nfunction useHydrateFallbackProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData()\n  };\n}\nfunction WithHydrateFallbackProps({\n  children\n}) {\n  const props = useHydrateFallbackProps();\n  return React3.cloneElement(children, props);\n}\nfunction withHydrateFallbackProps(HydrateFallback) {\n  return function WithHydrateFallbackProps2() {\n    const props = useHydrateFallbackProps();\n    return React3.createElement(HydrateFallback, props);\n  };\n}\nfunction useErrorBoundaryProps() {\n  return {\n    params: useParams(),\n    loaderData: useLoaderData(),\n    actionData: useActionData(),\n    error: useRouteError()\n  };\n}\nfunction WithErrorBoundaryProps({\n  children\n}) {\n  const props = useErrorBoundaryProps();\n  return React3.cloneElement(children, props);\n}\nfunction withErrorBoundaryProps(ErrorBoundary) {\n  return function WithErrorBoundaryProps2() {\n    const props = useErrorBoundaryProps();\n    return React3.createElement(ErrorBoundary, props);\n  };\n}\n\n// lib/dom/dom.ts\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && // Ignore everything but left clicks\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event);\n}\nfunction createSearchParams(init = \"\") {\n  return new URLSearchParams(\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\n      let value = init[key];\n      return memo2.concat(\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n      );\n    }, [])\n  );\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\n    );\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(form, target);\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = void 0;\n  }\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nimport * as React4 from \"react\";\n\n// vendor/turbo-stream-v2/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred2 = class {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// vendor/turbo-stream-v2/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            const dateTime = input2.getTime();\n            str[index2] = `[\"${TYPE_DATE}\",${Number.isNaN(dateTime) ? JSON.stringify(\"invalid\") : dateTime}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// vendor/turbo-stream-v2/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = value.length - 1; i > 0; i--)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = value.length - 2; i > 0; i -= 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred2();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// vendor/turbo-stream-v2/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred2();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value) continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      if (Object.keys(encoder.deferred).length) {\n        let raceDone;\n        const racePromise = new Promise((resolve, reject) => {\n          raceDone = resolve;\n          if (signal) {\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\n            if (signal.aborted) {\n              rejectPromise();\n            } else {\n              signal.addEventListener(\"abort\", (event) => {\n                rejectPromise();\n              });\n            }\n          }\n        });\n        while (Object.keys(encoder.deferred).length > 0) {\n          for (const [deferredId, deferred] of Object.entries(\n            encoder.deferred\n          )) {\n            if (seenPromises.has(deferred)) continue;\n            seenPromises.add(\n              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n              encoder.deferred[Number(deferredId)] = Promise.race([\n                racePromise,\n                deferred\n              ]).then(\n                (resolved) => {\n                  const id2 = flatten.call(encoder, resolved);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                },\n                (reason) => {\n                  if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                    reason = new Error(\"An unknown error occurred\");\n                  }\n                  const id2 = flatten.call(encoder, reason);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder.stringified.length - 1;\n                  }\n                }\n              ).finally(() => {\n                delete encoder.deferred[Number(deferredId)];\n              })\n            );\n          }\n          await Promise.race(Object.values(encoder.deferred));\n        }\n        raceDone();\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SingleFetchNoResultError = class extends Error {\n};\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      invariant2(manifestRoute, \"Route not found in manifest\");\n      let routeModule = routeModules[match.route.id];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)\n      };\n    },\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename,\n      shouldAllowOptOut\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename, shouldAllowOptOut = () => true) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (shouldAllowOptOut(m) && hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({ routes: {} });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  await bubbleMiddlewareErrors(\n    singleFetchDfd.promise,\n    args.matches,\n    routesParams,\n    results\n  );\n  return results;\n}\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\n  try {\n    let middlewareError;\n    let fetchedData = await singleFetchPromise;\n    if (\"routes\" in fetchedData) {\n      for (let match of matches) {\n        if (match.route.id in fetchedData.routes) {\n          let routeResult = fetchedData.routes[match.route.id];\n          if (\"error\" in routeResult) {\n            middlewareError = routeResult.error;\n            if (results[match.route.id]?.result == null) {\n              results[match.route.id] = {\n                type: \"error\",\n                result: middlewareError\n              };\n            }\n            break;\n          }\n        }\n      }\n    }\n    if (middlewareError !== void 0) {\n      Array.from(routesParams.values()).forEach((routeId) => {\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\n          results[routeId].result = middlewareError;\n        }\n      });\n    }\n  } catch (e) {\n  }\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename, extension) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = `_root.${extension}`;\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.${extension}`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.${extension}`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename, \"data\");\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status >= 400 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(res.status, res.statusText, await res.text());\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global && typeof global[name] === \"function\") {\n            Constructor = global[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (routeResult == null) {\n    throw new SingleFetchNoResultError(\n      `No result found for routeId \"${routeId}\"`\n    );\n  } else if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nimport * as React9 from \"react\";\n\n// lib/dom/ssr/components.tsx\nimport * as React8 from \"react\";\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    import.meta.hot) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href) => ({ rel: \"stylesheet\", href })) : [],\n      module?.links?.() || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href) => ({ rel: \"stylesheet\", href }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: currentMatches[0]?.params || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/fog-of-war.ts\nimport * as React7 from \"react\";\n\n// lib/dom/ssr/routes.tsx\nimport * as React6 from \"react\";\n\n// lib/dom/ssr/fallback.tsx\nimport * as React5 from \"react\";\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ) : null);\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React6.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React6.createElement(routeModule.Layout, null, /* @__PURE__ */ React6.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        middleware: routeModule.clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route.id,\n        routeModule.clientLoader,\n        route.hasLoader,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        middleware: route.hasClientMiddleware ? async () => {\n          let { clientMiddleware } = route.clientMiddlewareModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ) : await getLazyRoute();\n          invariant2(clientMiddleware, \"No `clientMiddleware` export found\");\n          return clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    clientMiddleware: routeModule.clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      routeDiscovery.manifestPath,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\n  React7.useEffect(() => {\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet\n    window.navigator?.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          routeDiscovery.manifestPath,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\n}\nfunction getManifestPath(_manifestPath, basename) {\n  let manifestPath = _manifestPath || \"/__manifest\";\n  if (basename == null) {\n    return manifestPath;\n  }\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\n  const searchParams = new URLSearchParams();\n  searchParams.set(\"paths\", paths.sort().join(\",\"));\n  searchParams.set(\"version\", manifest.version);\n  let url = new URL(\n    getManifestPath(manifestPath, basename),\n    window.location.origin\n  );\n  url.search = searchParams.toString();\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      try {\n        if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n          console.error(\n            \"Unable to discover routes due to manifest version mismatch.\"\n          );\n          return;\n        }\n        sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      } catch {\n      }\n      window.location.href = errorReloadPath;\n      console.warn(\"Detected manifest version mismatch, reloading...\");\n      await new Promise(() => {\n      });\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    try {\n      sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    } catch {\n    }\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React8.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React8.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React8.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React8.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React8.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React8.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React8.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React8.useRef(null);\n  React8.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React8.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nvar CRITICAL_CSS_DATA_ATTRIBUTE = \"data-react-router-critical-css\";\nfunction Links({ nonce }) {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React8.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React8.createElement(\n    \"style\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      dangerouslySetInnerHTML: { __html: criticalCss }\n    }\n  ) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      ...{ [CRITICAL_CSS_DATA_ATTRIBUTE]: \"\" },\n      rel: \"stylesheet\",\n      href: criticalCss.href,\n      nonce\n    }\n  ) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React8.createElement(PrefetchPageLinks, { key, nonce, ...link }) : /* @__PURE__ */ React8.createElement(\"link\", { key, nonce, ...link })\n  ));\n}\nfunction PrefetchPageLinks({ page, ...linkProps }) {\n  let { router } = useDataRouterContext2();\n  let matches = React8.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React8.createElement(PrefetchPageLinksImpl, { page, matches, ...linkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React8.useState([]);\n  React8.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { basename } = useDataRouterContext2();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React8.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React8.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React8.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename, \"data\");\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    basename,\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React8.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React8.createElement(\"link\", { key: href, rel: \"prefetch\", as: \"fetch\", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ React8.createElement(\"link\", { key: href, rel: \"modulepreload\", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React8.createElement(\"link\", { key, nonce: linkProps.nonce, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      loaderData: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule?.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        loaderData: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React8.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React8.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React8.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React8.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: escapeHtml(json) }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React8.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction setIsHydrated() {\n  isHydrated = true;\n}\nfunction Scripts(scriptProps) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta,\n    routeDiscovery,\n    ssr\n  } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let isRSCRouterContext = useIsRSCRouterContext();\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React8.useEffect(() => {\n    setIsHydrated();\n  }, []);\n  let initialScripts = React8.useMemo(() => {\n    if (isRSCRouterContext) {\n      return null;\n    }\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React8.createElement(React8.Fragment, null, /* @__PURE__ */ React8.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: { __html: contextScript },\n        type: void 0\n      }\n    ), /* @__PURE__ */ React8.createElement(\n      \"script\",\n      {\n        ...scriptProps,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: { __html: routeModulesScript },\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated || isRSCRouterContext ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  warnOnce(\n    !isRSCRouterContext,\n    \"The <Scripts /> element is a no-op when using RSC and can be safely removed.\"\n  );\n  return isHydrated || isRSCRouterContext ? null : /* @__PURE__ */ React8.createElement(React8.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React8.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React8.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: scriptProps.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/ssr/errorBoundaries.tsx\nvar RemixErrorBoundary = class extends React9.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React9.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React9.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React9.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React9.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React9.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React9.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React9.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React9.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React9.createElement(\"head\", null, /* @__PURE__ */ React9.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React9.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React9.createElement(\"title\", null, title)), /* @__PURE__ */ React9.createElement(\"body\", null, /* @__PURE__ */ React9.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React9.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/lib.tsx\nimport * as React10 from \"react\";\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n  if (isBrowser) {\n    window.__reactRouterVersion = // @ts-expect-error\n    \"7.9.4\";\n  }\n} catch (e) {\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    getContext: opts?.getContext,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    getContext: opts?.getContext,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors)\n    };\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction BrowserRouter({\n  basename,\n  children,\n  window: window2\n}) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HashRouter({ basename, children, window: window2 }) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HistoryRouter({\n  basename,\n  children,\n  history\n}) {\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar Link = React10.forwardRef(\n  function LinkWithRef({\n    onClick,\n    discover = \"render\",\n    prefetch = \"none\",\n    relative,\n    reloadDocument,\n    replace: replace2,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition,\n    ...rest\n  }, forwardedRef) {\n    let { basename } = React10.useContext(NavigationContext);\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n      absoluteHref = to;\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n    let href = useHref(to, { relative });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\n      prefetch,\n      rest\n    );\n    let internalOnClick = useLinkClickHandler(to, {\n      replace: replace2,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    let link = (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      /* @__PURE__ */ React10.createElement(\n        \"a\",\n        {\n          ...rest,\n          ...prefetchHandlers,\n          href: absoluteHref || href,\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\n          ref: mergeRefs(forwardedRef, prefetchRef),\n          target,\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n        }\n      )\n    );\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href })) : link;\n  }\n);\nLink.displayName = \"Link\";\nvar NavLink = React10.forwardRef(\n  function NavLinkWithRef({\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children,\n    ...rest\n  }, ref) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React10.useContext(DataRouterStateContext);\n    let { navigator, basename } = React10.useContext(NavigationContext);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n      ].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ React10.createElement(\n      Link,\n      {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className,\n        ref,\n        style,\n        to,\n        viewTransition\n      },\n      typeof children === \"function\" ? children(renderProps) : children\n    );\n  }\n);\nNavLink.displayName = \"NavLink\";\nvar Form = React10.forwardRef(\n  ({\n    discover = \"render\",\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace: replace2,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition,\n    ...props\n  }, forwardedRef) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace: replace2,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /* @__PURE__ */ React10.createElement(\n      \"form\",\n      {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n      }\n    );\n  }\n);\nForm.displayName = \"Form\";\nfunction ScrollRestoration({\n  getKey,\n  storageKey,\n  ...props\n}) {\n  let remixContext = React10.useContext(FrameworkContext);\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  useScrollRestoration({ getKey, storageKey });\n  let ssrKey = React10.useMemo(\n    () => {\n      if (!remixContext || !getKey) return null;\n      let userKey = getScrollRestorationKey(\n        location,\n        matches,\n        basename,\n        getKey\n      );\n      return userKey !== location.key ? userKey : null;\n    },\n    // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  if (!remixContext || remixContext.isSpaMode) {\n    return null;\n  }\n  let restoreScroll = ((storageKey2, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({ key }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(storageKey2);\n    }\n  }).toString();\n  return /* @__PURE__ */ React10.createElement(\n    \"script\",\n    {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `(${restoreScroll})(${JSON.stringify(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        )}, ${JSON.stringify(ssrKey)})`\n      }\n    }\n  );\n}\nScrollRestoration.displayName = \"ScrollRestoration\";\nfunction getDataRouterConsoleError2(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext3(hookName) {\n  let ctx = React10.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError2(hookName));\n  return ctx;\n}\nfunction useDataRouterState2(hookName) {\n  let state = React10.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError2(hookName));\n  return state;\n}\nfunction useLinkClickHandler(to, {\n  target,\n  replace: replaceProp,\n  state,\n  preventScrollReset,\n  relative,\n  viewTransition\n} = {}) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n  return React10.useCallback(\n    (event) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace2,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition\n    ]\n  );\n}\nfunction useSearchParams(defaultInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\n  );\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React10.useRef(false);\n  let location = useLocation();\n  let searchParams = React10.useMemo(\n    () => (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      )\n    ),\n    [location.search]\n  );\n  let navigate = useNavigate();\n  let setSearchParams = React10.useCallback(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(new URLSearchParams(searchParams)) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n  return [searchParams, setSearchParams];\n}\nvar fetcherId = 0;\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\nfunction useSubmit() {\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\n  let { basename } = React10.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n  return React10.useCallback(\n    async (target, options = {}) => {\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        await router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        await router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\nfunction useFormAction(action, { relative } = {}) {\n  let { basename } = React10.useContext(NavigationContext);\n  let routeContext = React10.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n  let [match] = routeContext.matches.slice(-1);\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n  let location = useLocation();\n  if (action == null) {\n    path.search = location.search;\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction useFetcher({\n  key\n} = {}) {\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\n  let fetcherData = React10.useContext(FetchersContext);\n  let route = React10.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n  let defaultKey = React10.useId();\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  }\n  React10.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => router.deleteFetcher(fetcherKey);\n  }, [router, fetcherKey]);\n  let load = React10.useCallback(\n    async (href, opts) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      await router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n  let submitImpl = useSubmit();\n  let submit = React10.useCallback(\n    async (target, opts) => {\n      await submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n  let unstable_reset = React10.useCallback((opts) => router.resetFetcher(fetcherKey, opts), [router, fetcherKey]);\n  let FetcherForm = React10.useMemo(() => {\n    let FetcherForm2 = React10.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\n      }\n    );\n    FetcherForm2.displayName = \"fetcher.Form\";\n    return FetcherForm2;\n  }, [fetcherKey]);\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data2 = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React10.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      unstable_reset,\n      ...fetcher,\n      data: data2\n    }),\n    [FetcherForm, submit, load, unstable_reset, fetcher, data2]\n  );\n  return fetcherWithComponents;\n}\nfunction useFetchers() {\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key\n  }));\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\n  let key = null;\n  if (getKey) {\n    if (basename !== \"/\") {\n      key = getKey(\n        {\n          ...location,\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        },\n        matches\n      );\n    } else {\n      key = getKey(location, matches);\n    }\n  }\n  if (key == null) {\n    key = location.key;\n  }\n  return key;\n}\nfunction useScrollRestoration({\n  getKey,\n  storageKey\n} = {}) {\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\n    \"useScrollRestoration\" /* UseScrollRestoration */\n  );\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  React10.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  usePageHide(\n    React10.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\n  );\n  if (typeof document !== \"undefined\") {\n    React10.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n      }\n    }, [storageKey]);\n    React10.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    React10.useLayoutEffect(() => {\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      try {\n        if (location.hash) {\n          let el = document.getElementById(\n            decodeURIComponent(location.hash.slice(1))\n          );\n          if (el) {\n            el.scrollIntoView();\n            return;\n          }\n        }\n      } catch {\n        warning(\n          false,\n          `\"${location.hash.slice(\n            1\n          )}\" is not a decodable element ID. The view will not scroll to it.`\n        );\n      }\n      if (preventScrollReset === true) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\nfunction useBeforeUnload(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePageHide(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePrompt({\n  when,\n  message\n}) {\n  let blocker = useBlocker(when);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\nfunction useViewTransitionState(to, { relative } = {}) {\n  let vtContext = React10.useContext(ViewTransitionContext);\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n  let { basename } = useDataRouterContext3(\n    \"useViewTransitionState\" /* useViewTransitionState */\n  );\n  let path = useResolvedPath(to, { relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n\n// lib/dom/server.tsx\nimport * as React11 from \"react\";\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = \"POP\" /* Pop */;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state != null ? locationProp.state : null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location,\n      navigationType: action,\n      navigator: staticNavigator,\n      static: true\n    }\n  );\n}\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate: hydrate2 = true,\n  nonce\n}) {\n  invariant(\n    router && context,\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\n  );\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let fetchersContext = /* @__PURE__ */ new Map();\n  let hydrateScript = \"\";\n  if (hydrate2 !== false) {\n    let data2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let { state } = dataRouterContext.router;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename: dataRouterContext.basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: dataRouterContext.navigator,\n      static: dataRouterContext.static\n    },\n    /* @__PURE__ */ React11.createElement(\n      DataRoutes2,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      nonce,\n      dangerouslySetInnerHTML: { __html: hydrateScript }\n    }\n  ) : null);\n}\nfunction DataRoutes2({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, void 0, future);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\n      );\n    },\n    go(delta) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\n      );\n    }\n  };\n}\nfunction createStaticHandler2(routes, opts) {\n  return createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context, opts = {}) {\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let matches = context.matches.map((match) => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get future() {\n      return {\n        v8_middleware: false,\n        ...opts?.future\n      };\n    },\n    get state() {\n      return {\n        historyAction: \"POP\" /* Pop */,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return void 0;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    resetFetcher() {\n      throw msg(\"resetFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    patchRoutes() {\n      throw msg(\"patchRoutes\");\n    },\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    },\n    _internalSetStateDoNotUseOrYouWillBreakYourApp() {\n      throw msg(\"_internalSetStateDoNotUseOrYouWillBreakYourApp\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  let href = typeof to === \"string\" ? to : createPath(to);\n  href = href.replace(/ $/, \"%20\");\n  let encoded = ABSOLUTE_URL_REGEX3.test(href) ? new URL(href) : new URL(href, \"http://localhost\");\n  return {\n    pathname: encoded.pathname,\n    search: encoded.search,\n    hash: encoded.hash\n  };\n}\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar ESCAPE_LOOKUP2 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\n}\n\nexport {\n  Action,\n  createBrowserHistory,\n  invariant,\n  createPath,\n  parsePath,\n  createContext,\n  RouterContextProvider,\n  convertRoutesToDataRoutes,\n  matchRoutes,\n  generatePath,\n  matchPath,\n  stripBasename,\n  resolvePath,\n  data,\n  redirect,\n  redirectDocument,\n  replace,\n  ErrorResponseImpl,\n  isRouteErrorResponse,\n  IDLE_NAVIGATION,\n  IDLE_FETCHER,\n  IDLE_BLOCKER,\n  createRouter,\n  createStaticHandler,\n  getStaticContextFromError,\n  isDataWithResponseInit,\n  isResponse,\n  isRedirectStatusCode,\n  isRedirectResponse,\n  isMutationMethod,\n  DataRouterContext,\n  DataRouterStateContext,\n  RSCRouterContext,\n  ViewTransitionContext,\n  FetchersContext,\n  AwaitContextProvider,\n  NavigationContext,\n  LocationContext,\n  RouteContext,\n  ENABLE_DEV_WARNINGS,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useNavigationType,\n  useMatch,\n  useNavigate,\n  useOutletContext,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useNavigation,\n  useRevalidator,\n  useMatches,\n  useLoaderData,\n  useRouteLoaderData,\n  useActionData,\n  useRouteError,\n  useAsyncValue,\n  useAsyncError,\n  useBlocker,\n  useRoute,\n  warnOnce,\n  mapRouteProperties,\n  hydrationRouteProperties,\n  createMemoryRouter,\n  UNSTABLE_TransitionEnabledRouterProvider,\n  RouterProvider,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  Await,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  renderMatches,\n  WithComponentProps,\n  withComponentProps,\n  WithHydrateFallbackProps,\n  withHydrateFallbackProps,\n  WithErrorBoundaryProps,\n  withErrorBoundaryProps,\n  createSearchParams,\n  escapeHtml,\n  encode,\n  createRequestInit,\n  SingleFetchRedirectSymbol,\n  SINGLE_FETCH_REDIRECT_STATUS,\n  NO_BODY_STATUS_CODES,\n  StreamTransfer,\n  getTurboStreamSingleFetchDataStrategy,\n  getSingleFetchDataStrategyImpl,\n  stripIndexParam,\n  singleFetchUrl,\n  decodeViaTurboStream,\n  RemixErrorBoundary,\n  createServerRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  noActionDefinedError,\n  createClientRoutes,\n  shouldHydrateRouteLoader,\n  getPatchRoutesOnNavigationFunction,\n  useFogOFWarDiscovery,\n  getManifestPath,\n  FrameworkContext,\n  CRITICAL_CSS_DATA_ATTRIBUTE,\n  Links,\n  PrefetchPageLinks,\n  Meta,\n  setIsHydrated,\n  Scripts,\n  createBrowserRouter,\n  createHashRouter,\n  BrowserRouter,\n  HashRouter,\n  HistoryRouter,\n  Link,\n  NavLink,\n  Form,\n  ScrollRestoration,\n  useLinkClickHandler,\n  useSearchParams,\n  useSubmit,\n  useFormAction,\n  useFetcher,\n  useFetchers,\n  useScrollRestoration,\n  useBeforeUnload,\n  usePrompt,\n  useViewTransitionState,\n  StaticRouter,\n  StaticRouterProvider,\n  createStaticHandler2,\n  createStaticRouter\n};\n","\nimport React from 'react';\n\nconst DarkSideOfTheMoon = () => {\n  return (\n    <div className=\"min-h-screen bg-deep-black text-white font-body\">\n      {/* Header */}\n      <header className=\"fixed top-0 left-0 right-0 z-50 bg-deep-black bg-opacity-80 backdrop-blur-sm p-4 shadow-lg\">\n        <nav className=\"container mx-auto flex justify-between items-center\">\n          <h1 className=\"text-2xl font-heading text-silver\">The Regency View Estate</h1>\n          <ul className=\"flex space-x-6\">\n            <li><a href=\"#home\" className=\"hover:text-silver transition-colors duration-300\">Home</a></li>\n            <li><a href=\"#property\" className=\"hover:text-silver transition-colors duration-300\">Property</a></li>\n            <li><a href=\"#investment\" className=\"hover:text-silver transition-colors duration-300\">Investment</a></li>\n            <li><a href=\"#contact\" className=\"hover:text-silver transition-colors duration-300\">Contact</a></li>\n          </ul>\n        </nav>\n      </header>\n\n      {/* Hero Section */}\n      <section id=\"home\" className=\"relative h-screen flex items-center justify-center bg-charcoal bg-cover bg-center animate-fade-in\" style={{ backgroundImage: 'url(\"https://via.placeholder.com/1920x1080\")' }}>\n        <div className=\"absolute inset-0 bg-black opacity-60\"></div>\n        <div className=\"relative z-10 text-center p-8\">\n          <h2 className=\"text-6xl font-heading text-silver mb-4 animate-slide-in-top\">The Regency View Estate</h2>\n          <p className=\"text-xl text-white mb-8 animate-slide-in-bottom\">A $2.685M luxury estate in Happy Valley, Oregon</p>\n          <a href=\"#contact\" className=\"bg-silver text-deep-black px-8 py-3 rounded-full text-lg font-bold hover:bg-white transition-all duration-300 animate-fade-in-up\">Inquire Now</a>\n        </div>\n      </section>\n\n      {/* Property Details Section */}\n      <section id=\"property\" className=\"py-20 bg-deep-black text-charcoal\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-5xl font-heading text-silver text-center mb-12 animate-fade-in\">Property Details</h2>\n          <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n            <div>\n              <img src=\"https://via.placeholder.com/800x600\" alt=\"Estate Interior\" className=\"rounded-lg shadow-xl animate-slide-in-left\" />\n            </div>\n            <div className=\"text-white\">\n              <h3 className=\"text-4xl font-heading text-silver mb-4\">Architectural Mastery</h3>\n              <p className=\"text-lg mb-4\">This 4,100 sq ft, 3/4 bed/bath estate, built in 2025, is a testament to modern luxury and design. Every detail has been meticulously crafted to offer an unparalleled living experience.</p>\n              <ul className=\"list-disc list-inside text-lg space-y-2\">\n                <li>Spacious 4,100 sq ft living area</li>\n                <li>3-4 luxurious bedrooms and bathrooms</li>\n                <li>Built in 2025 with contemporary design</li>\n                <li>High-end finishes and fixtures throughout</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Investment Opportunity Section */}\n      <section id=\"investment\" className=\"py-20 bg-charcoal text-white\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-5xl font-heading text-silver text-center mb-12 animate-fade-in\">Investment Excellence</h2>\n          <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n            <div className=\"text-white\">\n              <h3 className=\"text-4xl font-heading text-silver mb-4\">A Legacy Asset</h3>\n              <p className=\"text-lg mb-4\">More than just a home, The Regency View Estate represents a significant investment opportunity in one of Oregon's most desirable locations. Secure your future with this generational asset.</p>\n              <ul className=\"list-disc list-inside text-lg space-y-2\">\n                <li>Prime location in Happy Valley, Oregon</li>\n                <li>Exceptional market value and appreciation potential</li>\n                <li>Exclusive luxury real estate market</li>\n                <li>A truly unique and rare offering</li>\n              </ul>\n            </div>\n            <div>\n              <img src=\"https://via.placeholder.com/800x600\" alt=\"Investment Graph\" className=\"rounded-lg shadow-xl animate-slide-in-right\" />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Section */}\n      <section id=\"contact\" className=\"py-20 bg-deep-black text-white\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-5xl font-heading text-silver mb-12 animate-fade-in\">Contact Us</h2>\n          <p className=\"text-xl mb-8\">Ready to experience The Regency View Estate? Contact us today for a private viewing.</p>\n          <div className=\"max-w-2xl mx-auto bg-charcoal p-10 rounded-lg shadow-xl animate-fade-in-up\">\n            <form className=\"space-y-6\">\n              <div>\n                <input type=\"text\" placeholder=\"Your Name\" className=\"w-full p-4 bg-deep-black border border-silver rounded-md text-white placeholder-silver focus:outline-none focus:ring-2 focus:ring-silver\" />\n              </div>\n              <div>\n                <input type=\"email\" placeholder=\"Your Email\" className=\"w-full p-4 bg-deep-black border border-silver rounded-md text-white placeholder-silver focus:outline-none focus:ring-2 focus:ring-silver\" />\n              </div>\n              <div>\n                <textarea placeholder=\"Your Message\" rows=\"5\" className=\"w-full p-4 bg-deep-black border border-silver rounded-md text-white placeholder-silver focus:outline-none focus:ring-2 focus:ring-silver\"></textarea>\n              </div>\n              <button type=\"submit\" className=\"bg-silver text-deep-black px-8 py-3 rounded-full text-lg font-bold hover:bg-white transition-all duration-300\">Send Message</button>\n            </form>\n            <div className=\"mt-8 text-lg\">\n              <p>Phone: <a href=\"tel:408-202-5342\" className=\"text-silver hover:underline\">408-202-5342</a></p>\n              <p>Email: <a href=\"mailto:info@theregencyviewestate.com\" className=\"text-silver hover:underline\">info@theregencyviewestate.com</a></p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-deep-black py-8 text-center text-silver text-sm\">\n        <p>&copy; {new Date().getFullYear()} The Regency View Estate. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default DarkSideOfTheMoon;\n\n","import React, { useState, useEffect } from 'react'\nimport { MapPin, Home, Bath, Maximize, Calendar, Star, Phone, Mail, ExternalLink } from 'lucide-react'\n\nconst RegencyViewEstateV2 = () => {\n  const [currentSection, setCurrentSection] = useState(0)\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const sections = document.querySelectorAll('.section')\n      const scrollPosition = window.scrollY + window.innerHeight / 2\n\n      sections.forEach((section, index) => {\n        const sectionTop = section.offsetTop\n        const sectionHeight = section.offsetHeight\n        \n        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {\n          setCurrentSection(index)\n        }\n      })\n    }\n\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 font-['Noah']\">\n      {/* Navigation */}\n      <nav className=\"fixed top-0 w-full bg-white/90 backdrop-blur-lg z-50 shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"font-['Moon'] text-2xl font-light text-gray-800 tracking-wide\">\n              THE REGENCY VIEW\n              <div className=\"text-xs font-medium tracking-widest text-gray-600 uppercase\">\n                Estate Collection\n              </div>\n            </div>\n            <div className=\"hidden md:flex space-x-8\">\n              <a href=\"#home\" className=\"text-gray-700 hover:text-gray-900 transition-colors font-medium\">Home</a>\n              <a href=\"#property\" className=\"text-gray-700 hover:text-gray-900 transition-colors font-medium\">Property</a>\n              <a href=\"#investment\" className=\"text-gray-700 hover:text-gray-900 transition-colors font-medium\">Investment</a>\n              <a href=\"#contact\" className=\"text-gray-700 hover:text-gray-900 transition-colors font-medium\">Contact</a>\n            </div>\n            <button className=\"bg-gray-800 hover:bg-gray-900 text-white px-6 py-2 rounded-sm font-medium transition-all duration-300 shadow-lg hover:shadow-xl\">\n              Private Viewing\n            </button>\n          </div>\n        </div>\n      </nav>\n\n      {/* Hero Section */}\n      <section id=\"home\" className=\"section min-h-screen flex items-center justify-center relative overflow-hidden bg-gradient-to-br from-gray-50 to-white\">\n        <div className=\"absolute inset-0 bg-gray-100 opacity-50\"></div>\n        <div className=\"text-center z-10 px-6 max-w-4xl mx-auto\">\n          <h1 className=\"font-['Moon'] text-6xl md:text-8xl font-light text-gray-800 mb-8 tracking-wide leading-tight\">\n            WHERE LUXURY\n            <span className=\"block text-gray-600 italic font-light text-5xl md:text-7xl mt-4\">\n              Transcends Expectation\n            </span>\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-600 mb-12 max-w-3xl mx-auto leading-relaxed\">\n            Perched mid-hill facing lush green forest, where architectural mastery meets nature's tranquility\n          </p>\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-lg p-8 shadow-xl border border-gray-200 inline-block\">\n            <p className=\"text-3xl md:text-4xl font-['Moon'] text-gray-800 mb-2\">$2.685M</p>\n            <p className=\"text-gray-600 text-lg\">Investment Opportunity in Happy Valley's Most Coveted Location</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Property Details */}\n      <section id=\"property\" className=\"section py-24 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-['Moon'] text-5xl md:text-6xl font-light text-gray-800 mb-6\">\n              ARCHITECTURAL MASTERY\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n              Where Vision Becomes Reality\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-16 items-center\">\n            <div className=\"space-y-8\">\n              <div className=\"bg-gray-50 p-8 rounded-lg shadow-sm border border-gray-200\">\n                <h3 className=\"font-['Moon'] text-2xl text-gray-800 mb-4\">360-Degree Daylight Penetration</h3>\n                <p className=\"text-gray-600 leading-relaxed\">\n                  Floor-to-ceiling openings flood every space with natural light while maintaining privacy through cleverly designed openings.\n                </p>\n              </div>\n              <div className=\"bg-gray-50 p-8 rounded-lg shadow-sm border border-gray-200\">\n                <h3 className=\"font-['Moon'] text-2xl text-gray-800 mb-4\">Sloping Site Integration</h3>\n                <p className=\"text-gray-600 leading-relaxed\">\n                  The building is thoughtfully carved into the hillside, elevating designed living across three seamless levels.\n                </p>\n              </div>\n            </div>\n            <div className=\"bg-gradient-to-br from-gray-100 to-gray-200 p-12 rounded-lg shadow-lg\">\n              <div className=\"grid grid-cols-2 gap-8 text-center\">\n                <div>\n                  <div className=\"flex items-center justify-center mb-4\">\n                    <Home className=\"w-8 h-8 text-gray-700\" />\n                  </div>\n                  <p className=\"font-['Moon'] text-3xl text-gray-800 mb-2\">4,100</p>\n                  <p className=\"text-gray-600\">Square Feet</p>\n                </div>\n                <div>\n                  <div className=\"flex items-center justify-center mb-4\">\n                    <Bath className=\"w-8 h-8 text-gray-700\" />\n                  </div>\n                  <p className=\"font-['Moon'] text-3xl text-gray-800 mb-2\">3/4</p>\n                  <p className=\"text-gray-600\">Bed/Bath</p>\n                </div>\n                <div>\n                  <div className=\"flex items-center justify-center mb-4\">\n                    <Maximize className=\"w-8 h-8 text-gray-700\" />\n                  </div>\n                  <p className=\"font-['Moon'] text-3xl text-gray-800 mb-2\">7,405</p>\n                  <p className=\"text-gray-600\">Lot Size (SF)</p>\n                </div>\n                <div>\n                  <div className=\"flex items-center justify-center mb-4\">\n                    <Calendar className=\"w-8 h-8 text-gray-700\" />\n                  </div>\n                  <p className=\"font-['Moon'] text-3xl text-gray-800 mb-2\">2025</p>\n                  <p className=\"text-gray-600\">Built</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Investment Section */}\n      <section id=\"investment\" className=\"section py-24 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-['Moon'] text-5xl md:text-6xl font-light text-gray-800 mb-6\">\n              INVESTMENT EXCELLENCE\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n              Where architectural vision meets strategic investment opportunity\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"bg-white p-8 rounded-lg shadow-lg border border-gray-200 text-center\">\n              <div className=\"font-['Moon'] text-4xl text-gray-800 mb-4\">$655</div>\n              <div className=\"text-gray-600 mb-2\">Per Square Foot</div>\n              <div className=\"text-sm text-gray-500\">Competitive pricing for new construction luxury homes</div>\n            </div>\n            <div className=\"bg-white p-8 rounded-lg shadow-lg border border-gray-200 text-center\">\n              <div className=\"font-['Moon'] text-4xl text-gray-800 mb-4\">4-6%</div>\n              <div className=\"text-gray-600 mb-2\">Annual Appreciation</div>\n              <div className=\"text-sm text-gray-500\">Historical average for luxury properties in Happy Valley</div>\n            </div>\n            <div className=\"bg-white p-8 rounded-lg shadow-lg border border-gray-200 text-center\">\n              <div className=\"font-['Moon'] text-4xl text-gray-800 mb-4\">Top 10%</div>\n              <div className=\"text-gray-600 mb-2\">School Rankings</div>\n              <div className=\"text-sm text-gray-500\">Happy Valley schools rank in top 10% statewide</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Section */}\n      <section id=\"contact\" className=\"section py-24 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-['Moon'] text-5xl md:text-6xl font-light text-gray-800 mb-6\">\n              SECURE YOUR INVESTMENT\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n              Properties of this caliber in Happy Valley's luxury market typically attract multiple qualified buyers\n            </p>\n          </div>\n\n          <div className=\"bg-gray-50 p-12 rounded-lg shadow-lg border border-gray-200\">\n            <div className=\"grid md:grid-cols-2 gap-12\">\n              <div>\n                <h3 className=\"font-['Moon'] text-2xl text-gray-800 mb-6\">Contact Information</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center\">\n                    <Phone className=\"w-5 h-5 text-gray-600 mr-3\" />\n                    <span className=\"text-gray-700\">408-202-5342</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <Mail className=\"w-5 h-5 text-gray-600 mr-3\" />\n                    <span className=\"text-gray-700\">info@theregencyviewestate.com</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <MapPin className=\"w-5 h-5 text-gray-600 mr-3\" />\n                    <span className=\"text-gray-700\">13193 SE Regency Vw, Happy Valley, OR 97086</span>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h3 className=\"font-['Moon'] text-2xl text-gray-800 mb-6\">Schedule Private Viewing</h3>\n                <form className=\"space-y-4\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                    className=\"w-full p-3 border border-gray-300 rounded-sm focus:outline-none focus:border-gray-500 bg-white\"\n                  />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email Address\"\n                    className=\"w-full p-3 border border-gray-300 rounded-sm focus:outline-none focus:border-gray-500 bg-white\"\n                  />\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number\"\n                    className=\"w-full p-3 border border-gray-300 rounded-sm focus:outline-none focus:border-gray-500 bg-white\"\n                  />\n                  <textarea\n                    placeholder=\"Message\"\n                    rows=\"4\"\n                    className=\"w-full p-3 border border-gray-300 rounded-sm focus:outline-none focus:border-gray-500 bg-white\"\n                  ></textarea>\n                  <button\n                    type=\"submit\"\n                    className=\"w-full bg-gray-800 hover:bg-gray-900 text-white py-3 px-6 rounded-sm font-medium transition-all duration-300 shadow-lg hover:shadow-xl\"\n                  >\n                    Request Private Viewing\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-800 text-white py-12\">\n        <div className=\"max-w-6xl mx-auto px-6 text-center\">\n          <div className=\"font-['Moon'] text-2xl font-light mb-4\">THE REGENCY VIEW ESTATE</div>\n          <p className=\"text-gray-400 mb-6\">Where Luxury Transcends Expectation</p>\n          <div className=\"flex justify-center space-x-8 text-sm text-gray-400\">\n            <span>© 2025 The Regency View Estate</span>\n            <span>•</span>\n            <span>All Rights Reserved</span>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default RegencyViewEstateV2\n","\nimport React from 'react';\n\nconst RegencyViewEstate = () => {\n  return (\n    <div className=\"min-h-screen bg-deep-blue text-white-text font-noah\">\n      {/* Hero Section */}\n      <section className=\"relative h-screen flex items-center justify-center bg-gradient-to-br from-deep-blue via-cosmic-purple to-electric-blue overflow-hidden\">\n        <div className=\"absolute inset-0 z-0 opacity-30\">\n          {/* Star-like accents */}\n          <div className=\"absolute top-1/4 left-1/4 w-2 h-2 bg-white rounded-full animate-pulse\"></div>\n          <div className=\"absolute bottom-1/3 right-1/3 w-3 h-3 bg-white rounded-full animate-pulse animation-delay-200\"></div>\n          <div className=\"absolute top-1/2 right-1/4 w-1 h-1 bg-white rounded-full animate-pulse animation-delay-400\"></div>\n          <div className=\"absolute bottom-1/4 left-1/2 w-2 h-2 bg-white rounded-full animate-pulse animation-delay-600\"></div>\n          <div className=\"absolute top-1/3 left-1/3 w-1 h-1 bg-white rounded-full animate-pulse animation-delay-800\"></div>\n          <div className=\"absolute bottom-1/4 right-1/4 w-2 h-2 bg-white rounded-full animate-pulse animation-delay-1000\"></div>\n          <div className=\"absolute top-1/2 left-1/4 w-3 h-3 bg-white rounded-full animate-pulse animation-delay-1200\"></div>\n        </div>\n        <div className=\"relative z-10 text-center p-8 animate-fade-in\">\n          <h1 className=\"text-4xl md:text-6xl font-moon font-bold mb-4 animate-fade-in-up\">The Regency View Estate</h1>\n          <p className=\"text-lg md:text-2xl font-noah mb-8 animate-fade-in-up animation-delay-200\">$2.685M Luxury Estate in Happy Valley, Oregon</p>\n          <button className=\"bg-electric-blue hover:bg-cosmic-purple text-white-text font-bold py-3 px-8 rounded-full text-lg transition duration-300 ease-in-out transform hover:scale-105 animate-fade-in-up animation-delay-400\">\n            Inquire Now\n          </button>\n        </div>\n      </section>\n\n      {/* Property Details Section */}\n      <section className=\"h-screen flex items-center justify-center bg-cosmic-purple p-16 animate-fade-in-up\">\n        <div className=\"max-w-4xl text-center\">\n          <h2 className=\"text-3xl md:text-5xl font-moon font-bold mb-8\">Architectural Mastery</h2>\n          <p className=\"text-base md:text-xl font-noah leading-relaxed mb-6\">\n            Discover a masterpiece of modern design, spanning 4,100 sq ft with 3-4 bedrooms and baths, built in 2025.\n            Every detail reflects unparalleled luxury and thoughtful craftsmanship, offering an exquisite living experience.\n          </p>\n          <p className=\"text-base md:text-xl font-noah leading-relaxed\">\n            Clean lines, expansive spaces, and premium finishes define this estate, setting a new standard for sophisticated living.\n          </p>\n        </div>\n      </section>\n\n      {/* Investment Information Section */}\n      <section className=\"h-screen flex items-center justify-center bg-deep-blue p-16 animate-fade-in-up animation-delay-200\">\n        <div className=\"max-w-4xl text-center\">\n          <h2 className=\"text-3xl md:text-5xl font-moon font-bold mb-8\">An Investment Opportunity</h2>\n          <p className=\"text-base md:text-xl font-noah leading-relaxed mb-6\">\n            More than just a home, The Regency View Estate represents a prime investment in one of Oregon's most desirable locations.\n            Secure your legacy with a property designed for enduring value and prestige.\n          </p>\n          <p className=\"text-base md:text-xl font-noah leading-relaxed\">\n            Happy Valley offers a vibrant community, excellent amenities, and a growing market, ensuring a wise and rewarding acquisition.\n          </p>\n        </div>\n      </section>\n\n      {/* Contact Form Section */}\n      <section className=\"h-screen flex items-center justify-center bg-gradient-to-br from-electric-blue via-cosmic-purple to-deep-blue p-16 animate-fade-in-up animation-delay-400\">\n        <div className=\"max-w-2xl w-full bg-deep-blue p-10 rounded-lg shadow-lg\">\n          <h2 className=\"text-2xl md:text-4xl font-moon font-bold mb-8 text-center\">Inquire About Your Future Home</h2>\n          <form className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-white-text text-base md:text-lg font-noah mb-2\">Name</label>\n              <input type=\"text\" id=\"name\" name=\"name\" className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-white-text focus:outline-none focus:ring-2 focus:ring-electric-blue\" />\n            </div>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-white-text text-base md:text-lg font-noah mb-2\">Email</label>\n              <input type=\"email\" id=\"email\" name=\"email\" className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-white-text focus:outline-none focus:ring-2 focus:ring-electric-blue\" />\n            </div>\n            <div>\n              <label htmlFor=\"message\" className=\"block text-white-text text-base md:text-lg font-noah mb-2\">Message</label>\n              <textarea id=\"message\" name=\"message\" rows=\"5\" className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-white-text focus:outline-none focus:ring-2 focus:ring-electric-blue\"></textarea>\n            </div>\n            <button type=\"submit\" className=\"w-full bg-electric-blue hover:bg-cosmic-purple text-white-text font-bold py-3 px-6 rounded-md text-lg transition duration-300 ease-in-out transform hover:scale-105\">\n              Send Inquiry\n            </button>\n          </form>\n          <p className=\"text-center text-white-text text-base md:text-lg mt-8\">\n            Contact: 408-202-5342 | info@theregencyviewestate.com\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default RegencyViewEstate;\n\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","\"use client\";\nimport { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get iterationDuration() {\n        const { delay = 0 } = this.options || {};\n        return this.duration + millisecondsToSeconds(delay);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get iterationDuration() {\n        const { delay = 0 } = this.options || {};\n        return this.duration + millisecondsToSeconds(delay);\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type = \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get iterationDuration() {\n        return this.animation.iterationDuration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","\"use client\";\nimport { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","\"use client\";\nimport { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","\"use client\";\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","\"use client\";\nimport { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","\"use client\";\nimport { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Include externalRef in dependencies to ensure the callback updates\n     * when the ref changes, allowing proper ref forwarding.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","\"use client\";\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            /**\n             * Temporarily disabling resetting this flag as it prevents components\n             * with initial={false} from animating after being remounted, for instance\n             * as the child of an Activity component.\n             */\n            // isInitialRender = true\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","\"use client\";\nimport { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Home = () => {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-[#2D2D2D] to-[#D3D3D3] text-white font-noah\">\n      {/* Hero Section */}\n      <section className=\"relative h-screen flex items-center justify-center overflow-hidden\">\n        <div className=\"absolute inset-0 bg-black opacity-50\"></div>\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 1 }}\n          className=\"relative z-10 text-center\"\n        >\n          <h1 className=\"text-6xl font-bold font-moon text-gold-400 mb-4 drop-shadow-lg\">\n            The Regency View Estate\n          </h1>\n          <p className=\"text-2xl font-light mb-8\">\n            Luxury Property in Happy Valley, Oregon\n          </p>\n          <button className=\"bg-gold-500 text-black font-bold py-3 px-8 rounded-full hover:bg-gold-600 transition duration-300\">\n            Inquire Now\n          </button>\n        </motion.div>\n        {/* Corona Effect (simplified) */}\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <motion.div\n            initial={{ scale: 0, opacity: 0 }}\n            animate={{ scale: 1, opacity: 0.3 }}\n            transition={{ duration: 2, repeat: Infinity, repeatType: \"reverse\" }}\n            className=\"absolute w-96 h-96 rounded-full bg-gold-500 blur-3xl opacity-30\"\n          ></motion.div>\n        </div>\n      </section>\n\n      {/* Property Details Section */}\n      <section className=\"py-20 px-10 text-center bg-black bg-opacity-70\">\n        <h2 className=\"text-5xl font-bold font-moon text-gold-400 mb-12\">\n          Architectural Mastery\n        </h2>\n        <div className=\"max-w-4xl mx-auto grid md:grid-cols-2 gap-12 items-center\">\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"text-left\"\n          >\n            <p className=\"text-lg mb-4\">\n              Discover an unparalleled living experience at The Regency View Estate, a masterpiece of modern design nestled in the serene landscape of Happy Valley, Oregon.\n            </p>\n            <p className=\"text-lg mb-4\">\n              Boasting 4,100 sq ft of meticulously crafted space, this estate, built in 2025, offers 3 to 4 spacious bedrooms and bathrooms, blending luxury with comfort.\n            </p>\n            <p className=\"text-lg\">\n              Every detail reflects architectural mastery, from sweeping lines to premium finishes, creating an ambiance of sophisticated elegance.\n            </p>\n          </motion.div>\n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n            className=\"text-left\"\n          >\n            <ul className=\"list-disc list-inside text-lg space-y-2\">\n              <li>$2.685M Luxury Estate</li>\n              <li>4,100 sq ft of living space</li>\n              <li>3-4 Bedrooms, 3-4 Bathrooms</li>\n              <li>Built in 2025</li>\n              <li>Happy Valley, Oregon</li>\n            </ul>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Investment Information Section */}\n      <section className=\"py-20 px-10 text-center bg-gradient-to-br from-[#2D2D2D] to-[#D3D3D3]\">\n        <h2 className=\"text-5xl font-bold font-moon text-gold-400 mb-12\">\n          An Investment Opportunity\n        </h2>\n        <motion.p\n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n          className=\"max-w-3xl mx-auto text-xl leading-relaxed text-gray-200\"\n        >\n          More than just a home, The Regency View Estate represents a sound investment in a rapidly appreciating luxury market. Its prime location, exceptional design, and modern amenities ensure lasting value and an unparalleled lifestyle.\n        </motion.p>\n      </section>\n\n      {/* Contact Form Section */}\n      <section className=\"py-20 px-10 bg-black bg-opacity-70\">\n        <h2 className=\"text-5xl font-bold font-moon text-gold-400 text-center mb-12\">\n          Inquire About This Property\n        </h2>\n        <div className=\"max-w-2xl mx-auto bg-gray-800 p-10 rounded-lg shadow-xl\">\n          <form className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-lg font-medium text-gray-200\">Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                className=\"mt-1 block w-full p-3 border border-gray-600 rounded-md shadow-sm bg-gray-700 text-white focus:ring-gold-500 focus:border-gold-500\"\n                placeholder=\"Your Name\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-lg font-medium text-gray-200\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                className=\"mt-1 block w-full p-3 border border-gray-600 rounded-md shadow-sm bg-gray-700 text-white focus:ring-gold-500 focus:border-gold-500\"\n                placeholder=\"Your Email\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"phone\" className=\"block text-lg font-medium text-gray-200\">Phone</label>\n              <input\n                type=\"tel\"\n                id=\"phone\"\n                className=\"mt-1 block w-full p-3 border border-gray-600 rounded-md shadow-sm bg-gray-700 text-white focus:ring-gold-500 focus:border-gold-500\"\n                placeholder=\"Your Phone Number\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"message\" className=\"block text-lg font-medium text-gray-200\">Message</label>\n              <textarea\n                id=\"message\"\n                rows=\"4\"\n                className=\"mt-1 block w-full p-3 border border-gray-600 rounded-md shadow-sm bg-gray-700 text-white focus:ring-gold-500 focus:border-gold-500\"\n                placeholder=\"I am interested in learning more about The Regency View Estate...\"\n              ></textarea>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"w-full bg-gold-500 text-black font-bold py-3 px-4 rounded-md hover:bg-gold-600 transition duration-300\"\n            >\n              Submit Inquiry\n            </button>\n          </form>\n          <p className=\"text-center text-gray-400 mt-8\">\n            Alternatively, contact us directly:\n            <br />\n            Phone: <a href=\"tel:408-202-5342\" className=\"text-gold-400 hover:underline\">408-202-5342</a>\n            <br />\n            Email: <a href=\"mailto:info@theregencyviewestate.com\" className=\"text-gold-400 hover:underline\">info@theregencyviewestate.com</a>\n          </p>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"py-8 text-center bg-black text-gray-400\">\n        <p>&copy; 2025 The Regency View Estate. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n\n","import React, { useEffect } from 'react';\n\nconst RegencyViewEstateV5 = () => {\n  useEffect(() => {\n    const handleSmoothScroll = (e) => {\n      e.preventDefault();\n      const targetId = e.currentTarget.getAttribute('href').substring(1);\n      const targetElement = document.getElementById(targetId);\n      if (targetElement) {\n        targetElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start',\n        });\n      }\n    };\n\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n      anchor.addEventListener('click', handleSmoothScroll);\n    });\n\n    return () => {\n      document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n        anchor.removeEventListener('click', handleSmoothScroll);\n      });\n    };\n  }, []);\n  return (\n    <div className=\"min-h-screen bg-pure-white text-pure-black font-noah\">\n      {/* Navigation Bar */}\n      <nav className=\"fixed w-full bg-pure-black bg-opacity-80 text-pure-white p-4 z-50 shadow-lg\">\n        <ul className=\"flex justify-center space-x-8\">\n          <li><a href=\"#hero\" className=\"hover:text-charcoal transition-colors duration-300\">Home</a></li>\n          <li><a href=\"#details\" className=\"hover:text-charcoal transition-colors duration-300\">Details</a></li>\n          <li><a href=\"#mastery\" className=\"hover:text-charcoal transition-colors duration-300\">Mastery</a></li>\n          <li><a href=\"#investment\" className=\"hover:text-charcoal transition-colors duration-300\">Investment</a></li>\n          <li><a href=\"#contact\" className=\"hover:text-charcoal transition-colors duration-300\">Contact</a></li>\n        </ul>\n      </nav>\n      {/* Hero Section */}\n      <section id=\"hero\" className=\"relative h-screen flex items-center justify-center bg-pure-black text-pure-white\">\n        <div className=\"text-center p-8\">\n          <h1 className=\"font-moon text-6xl md:text-8xl font-bold mb-4 animate-fade-in-up\">\n            The Regency View Estate\n          </h1>\n          <p className=\"text-xl md:text-2xl mb-8 animate-fade-in-up delay-200\">\n            Luxury Property in Happy Valley, Oregon\n          </p>\n          <button className=\"bg-pure-white text-pure-black px-8 py-3 rounded-full text-lg font-bold hover:bg-charcoal hover:text-pure-white transition-all duration-300 animate-fade-in-up delay-400\">\n            Inquire Now\n          </button>\n        </div>\n      </section>\n      {/* Property Details Section */}\n      <section id=\"details\" className=\"min-h-screen flex items-center justify-center p-16 bg-pure-white text-pure-black\">    <div className=\"max-w-4xl text-center\">\n          <h2 className=\"font-moon text-5xl font-bold mb-8 text-charcoal animate-fade-in-up\">\n            A Masterpiece of Modern Luxury\n          </h2>\n          <p className=\"text-xl mb-4 leading-relaxed animate-fade-in-up delay-200\">\n            Nestled in the serene landscape of Happy Valley, Oregon, The Regency View Estate offers an unparalleled living experience. This architectural marvel, built in 2025, spans 4,100 sq ft and features 3 to 4 spacious bedrooms and bathrooms, designed with meticulous attention to detail.\n          </p>\n          <p className=\"text-xl mb-4 leading-relaxed animate-fade-in-up delay-300\">\n            Every corner of this estate reflects a commitment to luxury and comfort, providing a sanctuary for discerning homeowners.\n          </p>\n          <ul className=\"text-lg list-disc list-inside mt-8 text-left inline-block animate-fade-in-up delay-400\">\n            <li>Property Value: $2.685M</li>\n            <li>Size: 4,100 sq ft</li>\n            <li>Bed/Bath: 3-4</li>\n            <li>Year Built: 2025</li>\n          </ul>\n        </div>\n      </section>\n\n      {/* Architectural Mastery Section */}\n      <section id=\"mastery\" className=\"min-h-screen flex items-center justify-center p-16 bg-charcoal text-pure-white\">\n        <div className=\"max-w-4xl text-center\">\n          <h2 className=\"font-moon text-5xl font-bold mb-8 animate-fade-in-up\">\n            Architectural Mastery\n          </h2>\n          <p className=\"text-xl mb-4 leading-relaxed animate-fade-in-up delay-200\">\n            Experience a home where innovative design meets timeless elegance. The Regency View Estate is a testament to architectural brilliance, featuring clean lines, expansive windows, and a seamless integration with its natural surroundings.\n          </p>\n          <p className=\"text-xl leading-relaxed animate-fade-in-up delay-300\">\n            Each element has been thoughtfully curated to create a living space that is both breathtaking and functional.\n          </p>\n        </div>\n      </section>\n\n       {/* Investment Opportunity Section */}\n      <section id=\"investment\" className=\"min-h-screen flex items-center justify-center p-16 bg-pure-white text-pure-black\">\n        <div className=\"max-w-4xl text-center\">\n          <h2 className=\"font-moon text-5xl font-bold mb-8 text-charcoal animate-fade-in-up\">\n            An Unrivaled Investment\n          </h2>\n          <p className=\"text-xl mb-4 leading-relaxed animate-fade-in-up delay-200\">\n            More than just a home, The Regency View Estate represents a significant investment opportunity in one of Oregon's most desirable locations. Its prime setting, coupled with its exceptional design and amenities, ensures lasting value.\n          </p>\n          <p className=\"text-xl leading-relaxed animate-fade-in-up delay-300\">\n            Secure your legacy with a property that promises both luxurious living and substantial appreciation.\n          </p>\n        </div>\n      </section>\n\n      {/* Contact Form Section */}\n      <section id=\"contact\" className=\"min-h-screen flex items-center justify-center p-16 bg-pure-black text-pure-white\">\n        <div className=\"max-w-2xl w-full text-center\">\n          <h2 className=\"font-moon text-5xl font-bold mb-8 animate-fade-in-up\">\n            Inquire About This Exclusive Property\n          </h2>\n          <p className=\"text-xl mb-8 animate-fade-in-up delay-200\">\n            Contact us today to schedule a private viewing or to learn more about The Regency View Estate.\n          </p>\n          <form className=\"space-y-6 text-left animate-fade-in-up delay-300\">\n            <div>\n              <label htmlFor=\"name\" className=\"block text-lg font-bold mb-2\">Name</label>\n              <input type=\"text\" id=\"name\" name=\"name\" className=\"w-full p-3 rounded-md bg-charcoal border border-charcoal focus:outline-none focus:ring-2 focus:ring-pure-white text-pure-white\" />\n            </div>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-lg font-bold mb-2\">Email</label>\n              <input type=\"email\" id=\"email\" name=\"email\" className=\"w-full p-3 rounded-md bg-charcoal border border-charcoal focus:outline-none focus:ring-2 focus:ring-pure-white text-pure-white\" />\n            </div>\n            <div>\n              <label htmlFor=\"phone\" className=\"block text-lg font-bold mb-2\">Phone (Optional)</label>\n              <input type=\"tel\" id=\"phone\" name=\"phone\" className=\"w-full p-3 rounded-md bg-charcoal border border-charcoal focus:outline-none focus:ring-2 focus:ring-pure-white text-pure-white\" />\n            </div>\n            <div>\n              <label htmlFor=\"message\" className=\"block text-lg font-bold mb-2\">Message</label>\n              <textarea id=\"message\" name=\"message\" rows=\"5\" className=\"w-full p-3 rounded-md bg-charcoal border border-charcoal focus:outline-none focus:ring-2 focus:ring-pure-white text-pure-white\"></textarea>\n            </div>\n            <button type=\"submit\" className=\"w-full bg-pure-white text-pure-black px-8 py-3 rounded-full text-lg font-bold hover:bg-charcoal hover:text-pure-white transition-all duration-300\">\n              Send Inquiry\n            </button>\n          </form>\n          <div className=\"mt-8 text-lg animate-fade-in-up delay-400\">\n            <p>Phone: 408-202-5342</p>\n            <p>Email: info@theregencyviewestate.com</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-pure-black text-pure-white text-center p-8 text-sm\">\n        <p>&copy; 2025 The Regency View Estate. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default RegencyViewEstateV5;\n\n","import React from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport V1 from './src/versions/v1/Home'\nimport V2 from './src/versions/v2/Home'\nimport V3 from './src/versions/v3/Home'\nimport V4 from './src/versions/v4/Home'\nimport V5 from './src/versions/v5/Home'\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<V1 />} />\n        <Route path=\"/1\" element={<V1 />} />\n        <Route path=\"/2\" element={<V2 />} />\n        <Route path=\"/3\" element={<V3 />} />\n        <Route path=\"/4\" element={<V4 />} />\n        <Route path=\"/5\" element={<V5 />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.jsx'\nimport './App.css'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n\n"],"file":"assets/index-c5cdcbbe.js"}